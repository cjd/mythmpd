#############################################################################
# Makefile for building: libmythmpd.so
# Generated by qmake (1.07a) (Qt 3.3.7) on: Sun Nov 11 15:28:30 2007
# Project:  mythmpd.pro
# Template: lib
# Command: $(QMAKE) -o Makefile mythmpd.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -D_REENTRANT -fPIC  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_PLUGIN -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -Wall -W -O2 -D_REENTRANT -fPIC  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_PLUGIN -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I/usr/include/qt3
LINK     = g++
LFLAGS   = -shared
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -lqt-mt -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = mythmpd.h \
		libmpdclient.h
SOURCES = main.cpp \
		mythmpd.cpp \
		libmpdclient.c
OBJECTS = main.o \
		mythmpd.o \
		libmpdclient.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_mythmpd.cpp
OBJMOC = moc_mythmpd.o
DIST	   = mythmpd.pro
QMAKE_TARGET = mythmpd
DESTDIR  = 
TARGET   = libmythmpd.so
TARGETD   = libmythmpd.so

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile  $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)



mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: mythmpd.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile mythmpd.pro
qmake: 
	@$(QMAKE) -o Makefile mythmpd.pro

dist: 
	@mkdir -p .tmp/mythmpd && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/mythmpd/ && ( cd `dirname .tmp/mythmpd` && $(TAR) mythmpd.tar mythmpd && $(GZIP) mythmpd.tar ) && $(MOVE) `dirname .tmp/mythmpd`/mythmpd.tar.gz . && $(DEL_FILE) -r .tmp/mythmpd

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

main.o: main.cpp mythmpd.h \
		libmpdclient.h

mythmpd.o: mythmpd.cpp libmpdclient.h \
		mythmpd.h

libmpdclient.o: libmpdclient.c libmpdclient.h

moc_mythmpd.o: moc_mythmpd.cpp  mythmpd.h libmpdclient.h \
		mythmpd.h

moc_mythmpd.cpp: $(MOC) mythmpd.h
	$(MOC) mythmpd.h -o moc_mythmpd.cpp

####### Install

install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/mythtv/plugins/" || $(MKDIR) "$(INSTALL_ROOT)/mythtv/plugins/"
	-$(INSTALL_FILE) "$(TARGET)" "$(INSTALL_ROOT)/mythtv/plugins/$(TARGET)"
	-strip --strip-unneeded "$(INSTALL_ROOT)/mythtv/plugins/$(TARGET)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)/mythtv/plugins/$(TARGET)"
	-$(DEL_DIR) "$(INSTALL_ROOT)/mythtv/plugins/"


install_uifiles: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)/share/mythtv/themes/default/" || $(MKDIR) "$(INSTALL_ROOT)/share/mythtv/themes/default/"
	-$(INSTALL_FILE) "mpd-ui.xml" "$(INSTALL_ROOT)/share/mythtv/themes/default/"


uninstall_uifiles: 
	-$(DEL_FILE) -r "$(INSTALL_ROOT)/share/mythtv/themes/default/mpd-ui.xml"
	-$(DEL_DIR) "$(INSTALL_ROOT)/share/mythtv/themes/default/"


install: install_target install_uifiles  

uninstall: uninstall_target uninstall_uifiles  

